var mongoose = require("mongoose");

var Lost = {
	timestamp: Number, //set by server
	isLost: Boolean, //true if lost, false if no longer lost. use this to toggle
	keyword: String,
	studentId: String	//A unique id per lecture. generated by server
};

/*
//This object isn't stored but it's passed to students when
//someone becomes lost or unlost (to keep track of top keywords)
var Lost-Keyword = {
	new: Boolean, //true if the keyword is new, false if not
	keyword: String, //the keyword
}
*/

var Poll = {
	id: String, //generated by server
	timestamp: Date, //set by server
	title: String,
	num_questions: Number,
	choices: [String],
	responses: [Response]
};
var Response = {
	timestamp: Date, //set by server
	studentId: String, //generated by server
	pollId: String,
	response: Number
};

var Question = {
	id: String, //generated by server when created
	timestamp: Date, //set by server
	question: String,
	answers: [Answer]
};
var Answer = {
	id: String, //generated by server when created
	questionId: String, //needs to be passed in
	timestamp: Date, //set by server
	answer: String
}

var lectureSchema = new mongoose.Schema({
	id: String,
	startTime: {type: Date, default: Date.now},
	name: String,
	lost: [Lost],
	polls: [Poll],
	questions: [Question]
}, {id: false});
lectureSchema.index({id: 1});

var Lecture = mongoose.model('Lecture', lectureSchema);

//Exports
module.exports = Lecture;
/*module.exports.Lost = Lost;
module.exports.Poll = Poll;
module.exports.Response = Response;
module.exports.Question = Question;
module.exports.Answer = Answer;*/